language: cpp
dist: xenial
matrix:
  include:
      #- os: linux
    - os: linux
      env: XEUS_STATIC_DEPENDENCIES=1
      #- os: osx
      #osx_image: xcode8
      #compiler: clang
env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
install:
    # Install conda
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    # Host dependencies
    - conda install zeromq=4.3.2 cppzmq=4.4.1 xtl=0.6 OpenSSL=1 libopenssl-static=1 nlohmann_json=3.4.0 -c conda-forge;
    # Build dependencies
    - conda install cmake=3.15 pkg-config -c conda-forge
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        conda install gxx_linux-64 libgcc libuuid -c conda-forge;
      fi
    # Test dependencies
    - conda install pytest jupyter_kernel_test=0.3.0 -c conda-forge
    # Activate root environment
    - source activate root
    # Build
    - mkdir build
    - pushd build
    - source activate root
    - if [[ "$XEUS_STATIC_DEPENDENCIES" == 1 ]]; then
        cmake -DDOWNLOAD_GTEST=ON -DCMAKE_INSTALL_PREFIX=$HOME/miniconda -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DXEUS_STATIC_DEPENDENCIES=ON ..;
      else
        cmake -DDOWNLOAD_GTEST=ON -DCMAKE_INSTALL_PREFIX=$HOME/miniconda -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX ..;
      fi
    - make VERBOSE=1
    - make install
    - popd
    # Build example
    - pushd example
    - mkdir build
    - pushd build
    - cmake -DCMAKE_INSTALL_PREFIX=$HOME/miniconda ..
    - make
    - popd && popd
    - cd build
script:
    - ctest --output-on-failure
